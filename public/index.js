const express = require("express");
const http = require("http");
const { Server } = require("socket.io");

const app = express();
const server = http.createServer(app);
const io = new Server(server);

// ูุฎูู ุงููููุงุช ุงูุฃูุงููุฉ (HTML, CSS, JS) ูุชุงุญุฉ ูู public/
app.use(express.static("public"));

// ููุง ูุชุตู ูุณุชุฎุฏู
io.on("connection", (socket) => {
  console.log("โ ูุณุชุฎุฏู ุฏุฎู");

  // ุงูุถูุงู ูุบุฑูุฉ
  socket.on("joinRoom", ({ room, username, avatar }) => {
    socket.join(room);
    console.log(`๐ค ${username} ุฏุฎู ุงูุบุฑูุฉ: ${room}`);

    // ูุจุนุช ุฑุณุงูุฉ ุฏุฎูู ููุบุฑูุฉ ูุงููุฉ
    io.to(room).emit("message", {
      user: "ุงููุธุงู",
      avatar: "",
      text: `${username} ุงูุถู ุฅูู ${room}`,
      time: new Date().toLocaleTimeString(),
      room,
    });
  });

  // ุงุณุชูุจุงู ุฑุณุงูุฉ ูู ูุณุชุฎุฏู
  socket.on("chatMessage", ({ room, user, avatar, msg, time }) => {
    io.to(room).emit("message", {
      user,
      avatar,
      text: msg,
      time,
      room,
    });
  });

  // ุนูุฏ ุงูุฎุฑูุฌ
  socket.on("disconnect", () => {
    console.log("โ ูุณุชุฎุฏู ุฎุฑุฌ");
  });
});

// ุชุดุบูู ุงูุณูุฑูุฑ
const PORT = process.env.PORT || 3000;
server.listen(PORT, () => {
  console.log(`๐ ุงูุณูุฑูุฑ ุฑุงูู ูุฎุฏู ุนูู http://localhost:${PORT}`);
});
